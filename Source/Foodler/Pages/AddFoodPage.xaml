<phone:PhoneApplicationPage
    x:Class="Foodler.Pages.AddFoodPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:phone="clr-namespace:Microsoft.Phone.Controls;assembly=Microsoft.Phone"
    xmlns:shell="clr-namespace:Microsoft.Phone.Shell;assembly=Microsoft.Phone"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:toolkit="clr-namespace:Microsoft.Phone.Controls;assembly=Microsoft.Phone.Controls.Toolkit"
    xmlns:toolkitPrimitives="clr-namespace:Microsoft.Phone.Controls.Primitives;assembly=Microsoft.Phone.Controls.Toolkit"
    FontFamily="{StaticResource PhoneFontFamilyNormal}"
    FontSize="{StaticResource PhoneFontSizeNormal}"
    Foreground="{StaticResource PhoneForegroundBrush}"
    SupportedOrientations="Portrait" Orientation="Portrait"
    mc:Ignorable="d"
    toolkit:TiltEffect.IsTiltEnabled="True"
    Style="{StaticResource NavigationAnimation}"
    shell:SystemTray.IsVisible="True">

    <phone:PhoneApplicationPage.Resources>
        <Style x:Key="RoundButton" TargetType="Button">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="{StaticResource PhoneForegroundBrush}"/>
            <Setter Property="Foreground" Value="{StaticResource PhoneForegroundBrush}"/>
            <Setter Property="BorderThickness" Value="{StaticResource PhoneBorderThickness}"/>
            <Setter Property="FontFamily" Value="{StaticResource PhoneFontFamilySemiBold}"/>
            <Setter Property="FontSize" Value="{StaticResource PhoneFontSizeMediumLarge}"/>
            <Setter Property="Padding" Value="10,3,10,5"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Grid Background="Transparent">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal"/>
                                    <VisualState x:Name="MouseOver"/>
                                    <VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="ContentContainer">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource PhoneBackgroundBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="ButtonBackground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource PhoneForegroundBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="ButtonBackground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource PhoneForegroundBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentContainer">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource PhoneDisabledBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="ButtonBackground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource PhoneDisabledBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="ButtonBackground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="Transparent"/>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Border x:Name="ButtonBackground"
                                    BorderBrush="{TemplateBinding BorderBrush}" 
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    Background="{TemplateBinding Background}"
                                    CornerRadius="30" 
                                    Padding="10"
                                    Margin="{StaticResource PhoneTouchTargetOverhang}">
                                <Grid x:Name="ContentContainer" 
                                                OpacityMask="{TemplateBinding Content}"
                                                Background="White"/>
                            </Border>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <DataTemplate x:Key="AvaibleFoodParticipantItemTemplate">
            <Grid HorizontalAlignment="Stretch">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="80"></ColumnDefinition>
                    <ColumnDefinition Width="*"></ColumnDefinition>
                </Grid.ColumnDefinitions>
                <Border
                    Grid.Column="0"
                    CornerRadius="32"
                    Margin="5"
                    Width="64" Height="64"
                    Background="{StaticResource PhoneBorderBrush}">
                    <Grid>
                        <Image 
                            HorizontalAlignment="Left"
                            Source="{Binding Avatar, Converter={StaticResource BitmapImageConverter}}">
                            <Image.Clip>
                                <EllipseGeometry
                                    Center="32,32"
                                    RadiusX="32"
                                    RadiusY="32" />
                            </Image.Clip>
                        </Image>
                        <TextBlock 
                            Visibility="{Binding AteRangeActivated, Converter={StaticResource VisibilityConverter}}"
                            Margin="-15 -10"
                            FontSize="18"
                            TextAlignment="Right" 
                            VerticalAlignment="Top" HorizontalAlignment="Right"
                            Height="30" Width="30" MaxWidth="30" LineHeight="30" 
                            Text="{Binding ParticipantAteCoefficient, StringFormat='x{0}'}"/>
                    </Grid>
                </Border>
                <TextBlock 
                    Grid.Column="1"
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Center"
                    FontSize="30"
                    Text="{Binding Name}"/>
            </Grid>
        </DataTemplate>
        <Style x:Key="LongListMultiSelectorFoodParticipantsItemListStyle" TargetType="toolkit:LongListMultiSelectorItem">
            <Setter Property="Background" Value="{StaticResource PhoneAccentBrush}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="toolkit:LongListMultiSelectorItem">
                        <Grid MinHeight="52">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"></ColumnDefinition>
                                <ColumnDefinition Width="Auto"></ColumnDefinition>
                            </Grid.ColumnDefinitions>
                            <Grid.Resources>
                                <ExponentialEase EasingMode="EaseIn" Exponent="8" x:Key="ExponentialEaseIn"/>
                                <QuadraticEase EasingMode="EaseOut" x:Key="QuadraticEaseOut"/>
                            </Grid.Resources>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="SelectionEnabledStates">
                                    <VisualStateGroup.Transitions>
                                        <VisualTransition x:Name="ClosedToExposed" 
    										From="Closed" To="Exposed"
    										GeneratedDuration="0:0:0.30">
                                            <Storyboard>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" 
    												Storyboard.TargetName="OuterHintPanel">
                                                    <EasingDoubleKeyFrame KeyTime="0:0:0.0" Value="0.0" EasingFunction="{StaticResource QuadraticEaseOut}"/>
                                                    <EasingDoubleKeyFrame KeyTime="0:0:0.30" Value="1.0" EasingFunction="{StaticResource QuadraticEaseOut}"/>
                                                </DoubleAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualTransition>
                                        <VisualTransition x:Name="ExposedToClosed" 
    										From="Exposed" To="Closed"
    										GeneratedDuration="0:0:0.30">
                                            <Storyboard>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" 
    												Storyboard.TargetName="OuterHintPanel">
                                                    <EasingDoubleKeyFrame KeyTime="0:0:0.0" Value="1.0" EasingFunction="{StaticResource QuadraticEaseOut}"/>
                                                    <EasingDoubleKeyFrame KeyTime="0:0:0.30" Value="0.0" EasingFunction="{StaticResource QuadraticEaseOut}"/>
                                                </DoubleAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualTransition>
                                        <VisualTransition x:Name="ExposedToOpened"
    										From="Exposed" To="Opened"
    										GeneratedDuration="0:0:0.30">
                                            <Storyboard>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateX)" 
    												Storyboard.TargetName="SelectBox">
                                                    <EasingDoubleKeyFrame KeyTime="0:0:0.0" Value="-58" EasingFunction="{StaticResource ExponentialEaseIn}"/>
                                                    <EasingDoubleKeyFrame KeyTime="0:0:0.15" Value="0" EasingFunction="{StaticResource ExponentialEaseIn}"/>
                                                </DoubleAnimationUsingKeyFrames>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateX)" 
    												Storyboard.TargetName="Presenter">
                                                    <EasingDoubleKeyFrame KeyTime="0:0:0.0" Value="24" EasingFunction="{StaticResource ExponentialEaseIn}"/>
                                                    <EasingDoubleKeyFrame KeyTime="0:0:0.15" Value="86" EasingFunction="{StaticResource ExponentialEaseIn}"/>
                                                </DoubleAnimationUsingKeyFrames>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" 
    												Storyboard.TargetName="OuterHintPanel">
                                                    <EasingDoubleKeyFrame KeyTime="0:0:0.0" Value="1.0" EasingFunction="{StaticResource QuadraticEaseOut}"/>
                                                    <EasingDoubleKeyFrame KeyTime="0:0:0.30" Value="0.0" EasingFunction="{StaticResource QuadraticEaseOut}"/>
                                                </DoubleAnimationUsingKeyFrames>
                                                <!--<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" 
    												Storyboard.TargetName="SelectBox">
                                                    <DiscreteObjectKeyFrame KeyTime="0:0:0.0" Value="Visible"/>
                                                </ObjectAnimationUsingKeyFrames>-->
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.IsHitTestVisible)" 
    												Storyboard.TargetName="OuterHintPanel">
                                                    <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="False"/>
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.IsHitTestVisible)" 
    												Storyboard.TargetName="InnerHintPanel">
                                                    <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="False"/>
                                                </ObjectAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualTransition>
                                        <VisualTransition x:Name="ClosedToOpened"
    										From="Closed" To="Opened"
    										GeneratedDuration="0:0:0.15">
                                            <Storyboard>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateX)" 
    												Storyboard.TargetName="SelectBox">
                                                    <EasingDoubleKeyFrame KeyTime="0:0:0.0" Value="-58" EasingFunction="{StaticResource ExponentialEaseIn}"/>
                                                    <EasingDoubleKeyFrame KeyTime="0:0:0.15" Value="0" EasingFunction="{StaticResource ExponentialEaseIn}"/>
                                                </DoubleAnimationUsingKeyFrames>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateX)" 
    												Storyboard.TargetName="Presenter">
                                                    <EasingDoubleKeyFrame KeyTime="0:0:0.0" Value="24" EasingFunction="{StaticResource ExponentialEaseIn}"/>
                                                    <EasingDoubleKeyFrame KeyTime="0:0:0.15" Value="86" EasingFunction="{StaticResource ExponentialEaseIn}"/>
                                                </DoubleAnimationUsingKeyFrames>
                                                <!--<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" 
    												Storyboard.TargetName="SelectBox">
                                                    <DiscreteObjectKeyFrame KeyTime="0:0:0.0" Value="Visible"/>
                                                </ObjectAnimationUsingKeyFrames>-->
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.IsHitTestVisible)" 
    												Storyboard.TargetName="OuterHintPanel">
                                                    <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="False"/>
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.IsHitTestVisible)" 
    												Storyboard.TargetName="InnerHintPanel">
                                                    <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="False"/>
                                                </ObjectAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualTransition>
                                        <VisualTransition x:Name="OpenedToClosed"
    										From="Opened" To="Closed"
    										GeneratedDuration="0:0:0.15">
                                            <Storyboard>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateX)" 
    												Storyboard.TargetName="SelectBox">
                                                    <EasingDoubleKeyFrame KeyTime="0:0:0.0" Value="0" EasingFunction="{StaticResource ExponentialEaseIn}"/>
                                                    <EasingDoubleKeyFrame KeyTime="0:0:0.15" Value="-58" EasingFunction="{StaticResource ExponentialEaseIn}"/>
                                                </DoubleAnimationUsingKeyFrames>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateX)" 
    												Storyboard.TargetName="Presenter">
                                                    <EasingDoubleKeyFrame KeyTime="0:0:0.0" Value="86" EasingFunction="{StaticResource ExponentialEaseIn}"/>
                                                    <EasingDoubleKeyFrame KeyTime="0:0:0.15" Value="24" EasingFunction="{StaticResource ExponentialEaseIn}"/>
                                                </DoubleAnimationUsingKeyFrames>
                                                <!--<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" 
    												Storyboard.TargetName="SelectBox">
                                                    <DiscreteObjectKeyFrame KeyTime="0:0:0.15" Value="Collapsed"/>
                                                </ObjectAnimationUsingKeyFrames>-->
                                            </Storyboard>
                                        </VisualTransition>
                                    </VisualStateGroup.Transitions>
                                    <VisualState x:Name="Closed"/>
                                    <VisualState x:Name="Exposed">
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetProperty="(UIElement.Opacity)" 
    											Storyboard.TargetName="OuterHintPanel"
    											Duration="0" To="1.0"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Opened">
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateX)" 
    											Storyboard.TargetName="SelectBox"
    											Duration="0" To="0"/>
                                            <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateX)" 
    											Storyboard.TargetName="Presenter"
    											Duration="0" To="20"/>
                                            <!--<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" 
    											Storyboard.TargetName="SelectBox">
                                                <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Visible"/>
                                            </ObjectAnimationUsingKeyFrames>-->
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" 
    											Storyboard.TargetName="OuterCover">
                                                <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Visible"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <DoubleAnimation Storyboard.TargetProperty="(UIElement.Opacity)" 
    											Storyboard.TargetName="OuterHintPanel"
    											Duration="0" To="0.0"/>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.IsHitTestVisible)" 
    											Storyboard.TargetName="OuterHintPanel">
                                                <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="False"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.IsHitTestVisible)" 
    											Storyboard.TargetName="InnerHintPanel">
                                                <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="False"/>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Grid Grid.Column="0" HorizontalAlignment="Stretch" Background="Transparent">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <Grid Grid.Column="0" 
                                      HorizontalAlignment="Stretch"
                                      toolkitPrimitives:ClipToBounds.IsEnabled="True">
                                    <ContentPresenter x:Name="Presenter" Margin="-10 0 0 0">
                                        <ContentPresenter.RenderTransform>
                                            <CompositeTransform TranslateX="0"/>
                                        </ContentPresenter.RenderTransform>
                                    </ContentPresenter>
                                </Grid>
                                <Rectangle x:Name="InnerHintPanel" Grid.Column="0" Width="24"
    								Height="{TemplateBinding HintPanelHeight}"
    								HorizontalAlignment="Left"
    								Fill="Transparent"
    								StrokeThickness="0">
                                    <Rectangle.RenderTransform>
                                        <CompositeTransform TranslateX="24"/>
                                    </Rectangle.RenderTransform>
                                </Rectangle>
                                <ContentControl x:Name="InfoPresenter" Grid.Column="1" 
    								VerticalAlignment="Top"
    								Content="{TemplateBinding ContentInfo}"
    								ContentTemplate="{TemplateBinding ContentInfoTemplate}"/>
                            </Grid>
                            <Rectangle x:Name="OuterHintPanel" Width="240"
    							HorizontalAlignment="Left"
    							Height="{TemplateBinding HintPanelHeight}"
    							Fill="{TemplateBinding Background}"
    							StrokeThickness="0" Opacity="0.0"/>
                            <Grid x:Name="OuterCover" IsHitTestVisible="True"
    							Visibility="Collapsed" Background="Transparent">
                                <Grid HorizontalAlignment="Left" Background="Transparent"
                                      VerticalAlignment="Stretch" Margin="0 15">
                                    <!--Visibility="{Binding IsSelected, Converter={StaticResource VisibilityConverter}, RelativeSource={RelativeSource TemplatedParent}}">-->
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="0"/>
                                        <RowDefinition Height="*"/>
                                    </Grid.RowDefinitions>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition/>
                                        <ColumnDefinition/>
                                    </Grid.ColumnDefinitions>
                                    <CheckBox Grid.Row="0" x:Name="SelectBox" VerticalAlignment="Top" Margin="12,-20,5,0" Visibility="Collapsed"
    								IsChecked="{Binding IsSelected, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}">
                                        <CheckBox.RenderTransform>
                                            <CompositeTransform TranslateX="-5"/>
                                        </CheckBox.RenderTransform>
                                    </CheckBox>
                                    <Border
                                        CornerRadius="10"
                                        Grid.Row="1" Grid.Column="0"
                                        Width="8" Height="8" Margin="0"
                                        VerticalAlignment="Stretch" 
                                        Background="{StaticResource PhoneAccentBrush}"/>
                                    <StackPanel
                                        Grid.Row="1" Grid.Column="0"
                                        Background="{StaticResource PhoneBackgroundBrush}" Opacity="0.8"
                                        Visibility="{Binding IsSelected, Converter={StaticResource InVisibilityConverter}, RelativeSource={RelativeSource TemplatedParent}}"/>
                                    <!--<Grid Grid.Row="1" Grid.Column="0" Width="8" Height="8" Margin="0 0 0 0" VerticalAlignment="Stretch" 
                                            Background="{StaticResource PhoneAccentBrush}" />-->
                                </Grid>
                            </Grid>
                            <Grid 
                                Grid.Column="1" 
                                Background="Transparent"
                                Visibility="{Binding AteRangeActivated, Converter={StaticResource VisibilityConverter}}">
                                <Grid Background="Transparent"
                                      Visibility="{Binding IsSelected, Converter={StaticResource VisibilityConverter}, RelativeSource={RelativeSource TemplatedParent}}">
                                    <StackPanel Orientation="Horizontal">
                                        <Button 
                                            Style="{StaticResource RoundButton}"
                                            BorderThickness="0"
                                            Background="{StaticResource PhoneAccentBrush}"
                                            FontSize="30" Margin="-5"
                                            Width="64" Height="64"
                                            Command="{Binding IncrementParticipantAteCommand}">
                                            <ImageBrush ImageSource="/Assets/Icon/arrow-up.png" Stretch="Fill"/>
                                        </Button>
                                        <!--<TextBlock 
                                            FontSize="25"
                                            TextAlignment="Center" VerticalAlignment="Center"
                                            Height="30" Width="30" MaxWidth="30" LineHeight="30" Margin="5"
                                            Text="{Binding ParticipantAteCoefficient, StringFormat='x{0}'}"/>-->
                                        <Button 
                                            Style="{StaticResource RoundButton}"
                                            BorderThickness="0" 
                                            Background="{StaticResource PhoneAccentBrush}"
                                            FontSize="30" Margin="-5"
                                            Width="64" Height="64"
                                            Command="{Binding DecrementParticipantAteCommand}">
                                            <ImageBrush ImageSource="/Assets/Icon/arrow-down.png" Stretch="Fill"/>
                                        </Button>
                                    </StackPanel>
                                    <StackPanel 
                                        Background="Black" Opacity="0.5"
                                        Visibility="{Binding IsSelected, Converter={StaticResource InVisibilityConverter}, RelativeSource={RelativeSource TemplatedParent}}"/>
                                </Grid>
                            </Grid>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="PrettyTextBoxes" TargetType="TextBox">
            <Setter Property="Background" Value="WhiteSmoke"/>
            <Setter Property="BorderBrush" Value="{StaticResource PhoneAccentBrush}"/>
            <Setter Property="BorderThickness" Value="4"/>
            <Setter Property="Padding" Value="5"/>
        </Style>
        <Style x:Key="ButtonStyle1" TargetType="Button">
            <Setter Property="Background" Value="White"/>
            <Setter Property="toolkit:TiltEffect.IsTiltEnabled" Value="False"/>
            <Setter Property="toolkit:TiltEffect.SuppressTilt" Value="False"/>
            <Setter Property="BorderBrush" Value="{StaticResource PhoneForegroundBrush}"/>
            <Setter Property="Foreground" Value="{StaticResource PhoneForegroundBrush}"/>
            <Setter Property="BorderThickness" Value="{StaticResource PhoneBorderThickness}"/>
            <Setter Property="FontFamily" Value="{StaticResource PhoneFontFamilySemiBold}"/>
            <Setter Property="FontSize" Value="{StaticResource PhoneFontSizeMedium}"/>
            <Setter Property="Padding" Value="10 5"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Grid Background="Transparent">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal"/>
                                    <VisualState x:Name="MouseOver"/>
                                    <VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.BorderBrush)" Storyboard.TargetName="ButtonBackground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource PhoneAccentBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="ButtonBackground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource PhoneDisabledBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="FocusStates"/>
                            </VisualStateManager.VisualStateGroups>
                            <Border x:Name="ButtonBackground" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="0" Margin="{StaticResource PhoneTouchTargetOverhang}" Background="White">
                                <ContentControl
                                    x:Name="ContentContainer"
                                    ContentTemplate="{TemplateBinding ContentTemplate}"
                                    Content="{TemplateBinding Content}"
                                    HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                    Padding="{TemplateBinding Padding}"
                                    VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" 
                                    Foreground="{TemplateBinding Foreground}"/>
                            </Border>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </phone:PhoneApplicationPage.Resources>
    <!--LayoutRoot is the root grid where all page content is placed-->
    <Grid x:Name="LayoutRoot" Background="Transparent" d:DataContext="{Binding Source={StaticResource SampleDataSource}}">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <!--TitlePanel contains the name of the application and page title-->
        <StackPanel Grid.Row="0" Margin="0,15,0,10">
            <TextBlock Text="{Binding AppTitleLabel}" Style="{StaticResource PhoneTextNormalStyle}"/>
        </StackPanel>

        <!--ContentPanel - place additional content here-->
        <Grid x:Name="ContentPanel" Grid.Row="1" Margin="12,0,12,0" toolkit:TiltEffect.SuppressTilt="True"
              toolkit:TiltEffect.IsTiltEnabled="False">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"></RowDefinition>
                <RowDefinition Height="*"></RowDefinition>
            </Grid.RowDefinitions>
            <StackPanel Grid.Row="0">
                <toolkit:ListPicker 
                    Name="FoodPicker"
                    Visibility="Collapsed"
                    Header="{Binding FoodLabel}"
                    FullModeHeader="{Binding ChooseYourFoodLabel}"
                    ItemsSource="{Binding AvailableFood}"
                    Style="{StaticResource FoodPickerStyle}"
                    SelectedItem="{Binding Food, Mode=TwoWay}">
                </toolkit:ListPicker>

                <TextBlock Text="{Binding FoodLabel}"/>
                <Button
                    Margin="-10 0"
                    Name="TextFoodName"
                    Foreground="Black"
                    FontWeight="Light"
                    BorderThickness="4"
                    Style="{StaticResource ButtonStyle1}"
                    FontSize="{StaticResource PhoneFontSizeExtraLarge}"
                    HorizontalContentAlignment="Left"
                    Click="TextFoodName_OnClick"  
                    Content="{Binding Food.Name}"
                    BorderBrush="{StaticResource PhoneChromeBrush}"
                    Background="{StaticResource PhoneBackgroundBrush}"/>

                <TextBlock Text="{Binding PriceLabel}"/>
                <!--<TextBox Text="{Binding Food.Price, Converter={StaticResource CostWithCurrencyConverter}, Mode=TwoWay}"/>-->
                <Button 
                    Margin="-10 0"
                    BorderThickness="4"
                    Name="TextFoodCost"
                    FontWeight="Light"
                    HorizontalContentAlignment="Right"
                    FontSize="{StaticResource PhoneFontSizeExtraLarge}"
                    Click="TextFoodCost_OnClick"
                    Content="{Binding}" 
					Style="{StaticResource ButtonStyle1}" 
					Background="{StaticResource PhoneChromeBrush}"
					BorderBrush="{StaticResource PhoneChromeBrush}" Foreground="{StaticResource PhoneTextMidContrastBrush}">
                    <Button.ContentTemplate>
                        <DataTemplate>
                            <StackPanel Orientation="Horizontal">
                                <TextBlock 
                                    Foreground="Black"
                                    FontWeight="Normal"
                                    FontSize="{StaticResource PhoneFontSizeExtraLarge}"
                                    Text="{Binding Food.Price, StringFormat='N2'}"/>
                                <TextBlock 
                                    Margin="10 0" 
                                    FontWeight="Bold"
                                    Text="{Binding CurrencySymbol}" Foreground="Gray"/>
                            </StackPanel>
                        </DataTemplate>
                    </Button.ContentTemplate>
                </Button>
            </StackPanel>
            <Grid Grid.Row="1">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"></RowDefinition>
                    <RowDefinition Height="*"></RowDefinition>
                </Grid.RowDefinitions>
                <TextBlock Grid.Row="0" Text="{Binding ParticipantsLabel}"/>
                <toolkit:LongListMultiSelector 
                        Grid.Row="1"
                        Name="NewJokesMultiSelector"
                        Margin="0 10 0 0"
                        ItemsSource="{Binding Participants}"
                        ItemTemplate="{StaticResource AvaibleFoodParticipantItemTemplate}"
                        ItemContainerStyle="{StaticResource LongListMultiSelectorFoodParticipantsItemListStyle}"
                        SelectionChanged="NewJokesMultiSelector_OnSelectionChanged"
                        LayoutMode="List"
                        EnforceIsSelectionEnabled="True" Foreground="#FFC92525">
                </toolkit:LongListMultiSelector>
            </Grid>
        </Grid>
    </Grid>
    <!--<phone:PhoneApplicationPage.ApplicationBar>
        <shell:ApplicationBar>
            <shell:ApplicationBarIconButton 
                x:Name="AppBarDone"
                IconUri="/Assets/AppBar/check.png"
                Text="done" 
                IsEnabled="True"
                Click="DoneButtonClick"/>
            <shell:ApplicationBarIconButton 
                x:Name="AppBarAddAteRange"
                IconUri="/Assets/AppBar/user-add.png"
                Text="ate range" 
                IsEnabled="False"
                Click="AppBarAddAteRange_OnClick"/>
            <shell:ApplicationBarIconButton 
                x:Name="AppBarSelectAll"
                IconUri="/Assets/AppBar/people-multiple.png"
                Text="select all"
                Click="AppBarSelectAll_OnClick"/>
            <shell:ApplicationBarIconButton 
                x:Name="AppBarResetAll"
                IconUri="/Assets/AppBar/transform-rotate-counterclockwise.png"
                Text="reset all" 
                IsEnabled="True"
                Click="AppBarResetAll_OnClick" />
        </shell:ApplicationBar>
    </phone:PhoneApplicationPage.ApplicationBar>-->
</phone:PhoneApplicationPage>